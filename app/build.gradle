apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.u1.gocashm"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 8
        versionName "1.0.8"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "32ae67ca761368edc5901ca7",
                JPUSH_CHANNEL: "google-play",
        ]
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/rxjava.properties'
    }
    packagingOptions {
        doNotStrip "*/armeabi/libdu.so"
        doNotStrip "*/x86/libdu.so"
        doNotStrip "*/arm64-v8a/libdu.so"
        doNotStrip "*/armeabi-v7a/libdu.so"
        doNotStrip "*/mips/libdu.so"
        doNotStrip "*/mips64/libdu.so"
        doNotStrip "*/x86_64/libdu.so"
    }

    flavorDimensions("LANGUAGE", "CHANNEL")


    productFlavors {
        chinese {
            dimension "LANGUAGE"
            //applicationId "com.lanhai.upesocash"
            applicationId "com.u1.gocashm"
        }
        philippines {
            dimension "LANGUAGE"
            applicationId "com.u1.gocashm"
        }
        uat { // 正式
            dimension "CHANNEL"
        }
        sit { // 测试
            dimension "CHANNEL"
        }
    }
    productFlavors.all {
        flavor ->
            flavor.manifestPlaceholders = [CHANNEL_VALUE: name]
//            flavor.versionName = "${variant.versionName}.${name}"
    }
    sourceSets {
        chinese.res.srcDirs = ['src/main/res-chinese']
        philippines.res.srcDirs = ['src/main/res-philippines']
    }
    signingConfigs {
        debug {
            keyAlias 'upeso'
            keyPassword '123456'
            storeFile file(rootProject.ext.storeFilePath)
            storePassword '123456'
        }
        release {
            keyAlias 'upeso'
            keyPassword '123456'
            storeFile file(rootProject.ext.storeFilePath)
            storePassword '123456'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled true
            // Zipalign优化
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            aaptOptions.cruncherEnabled = false
            aaptOptions.useNewCruncher = false
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    if (variant.buildType.name == "release" && output.outputFile != null && output.outputFile.name.endsWith('.apk')) {
                        def name = new StringBuffer(output.outputFile.name)
                        name.replace(0, 3, "upeso")
                        name.insert(name.size() - 4, "-" + variant.versionName)
                        output.outputFileName = name
                    }
                }
            }
            buildConfigField "String", "LIVENESS_KEY", '"be0d77b15ba754d6"'
            buildConfigField "String", "LIVENESS_SECRET", '"0bb7e6aa64c722f0"'
        }
        debug {
            buildConfigField "boolean", "LEO_DEBUG", "true"
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            shrinkResources false
            versionNameSuffix "-debug"
            signingConfig signingConfigs.debug
            buildConfigField "String", "LIVENESS_KEY", '"987965655a06cdfd"'
            buildConfigField "String", "LIVENESS_SECRET", '"71e92ca3df71c879"'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.0.0'

    implementation 'androidx.multidex:multidex:2.0.0'

    implementation 'com.blankj:utilcode:1.30.6'
    api 'com.jakewharton:butterknife:10.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'
    api 'androidx.cardview:cardview:1.0.0'

    implementation 'com.github.gittjy:LoadingDialog:1.0.2'
    implementation project(path: ':uclibrary')
    implementation project(':bubbleseekbar')
    implementation project(path: ':liveness')
    implementation project(path: ':wheelsruflibrary')
    api 'io.reactivex.rxjava2:rxjava:2.2.7'
    api 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
    api 'com.mylhyl:circleDialog:3.0.2'
    implementation 'com.facebook.android:facebook-core:5.0.0'
    implementation 'com.facebook.android:facebook-login:[5,6)'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.46'
    implementation 'cn.aigestudio.wheelpicker:WheelPicker:1.1.2'
    api 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar'
    api 'com.google.zxing:core:3.3.3'
    api 'com.amap.api:location:5.2.0'

    implementation 'com.appsflyer:af-android-sdk:6.4.2'
    implementation 'com.android.installreferrer:installreferrer:1.0'

    apply plugin: 'com.google.gms.google-services'


    implementation 'com.google.firebase:firebase-messaging:20.0.0'
    implementation 'com.google.firebase:firebase-core:17.2.0'

    implementation('com.google.android.gms:play-services-auth:16.0.1') {
        exclude group: 'com.android.support'
    }

/*    //OKGO
    implementation 'com.lzy.net:okgo:3.0.4'
    implementation 'com.lzy.net:okserver:2.0.5'*/

    implementation 'com.qw:soulpermission:1.3.0'
}
repositories {
    flatDir {
        dirs project(':liveness').file('libs')
    }
}
